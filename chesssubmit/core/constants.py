# constants.py
# Copyright 2022 Roger Marsh
# Licence: See LICENCE (BSD licence)

"""Constants used in ChessSubmit application."""

# Field names added to the ECF specification to support mapping of reported
# section names, team names in particular, to club codes and names accepted
# by the ECF.
# Although the ECF online submission systems seems to be moving away from
# the upper case style in the published specifications, or at least accept
# any case and no whitespace, the field names added here adopt camel case.
TEAM_LIST = "TeamList"
TEAM_NAME = "TeamName"
TEAM_SECTION = "TeamSection"
TEAM_CLUB_NAME = "TeamClubName"
TEAM_CLUB_CODE = "TeamClubCode"
PERSON_LIST = "PersonList"
PERSON_NAME = "PersonName"
PERSON_TEAM_SECTION = "PersonTeamSection"
PERSON_TEAM_NAME = "PersonTeamName"
PERSON_NUMBER = "PersonNumber"
PERSON_CODE = "PersonCode"
PERSON_ALIAS = "PersonAlias"
PERSON_ECF_NAME = "PersonECFName"
PERSON_ECF_CODE = "PersonECFCode"
FINAL = "Final"

# Most recently accessed database and configuation files for selecting and
# extracting text from emails to documents.
# Some could be per database, but done per user.
RECENT_EMAIL_SELECTION = "collection"
RECENT_EMAIL_EXTRACTION = "event"
RECENT_DOCUMENT = "document"
RECENT_SOURCE_SUBMISSION = "source_submission"

# Names of columns in tabular game reports generated by ChessResults.
# These are not used by emailextractor module which defines names of entries
# in the extract text configuration file which name the columns.
# The constants defined here are REPORT_SECTION, and so forth, while the
# constants in emailextractor are _REPORT_SECTION, and so forth.
REPORT_SECTION = "Section"
REPORT_DAY = "Day"
REPORT_DATE = "Date"
REPORT_ROUND = "Round"
REPORT_HOME_TEAM = "HomeTeam"
REPORT_HOME_TEAM_SCORE = "HTScore"
REPORT_HOME_PLAYER = "HomePlayer"
REPORT_RESULT = "Result"
REPORT_AWAY_PLAYER = "AwayPlayer"
REPORT_AWAY_TEAM_SCORE = "ATScore"
REPORT_AWAY_TEAM = "AwayTeam"
REPORT_BOARD = "Board"
REPORT_HOME_PLAYER_COLOUR = "HPColour"
REPORT_EVENT = "Event"

# Suitable for sorting rows into order for easy eyeball inspection.
TABULAR_REPORT_ROW_ORDER = (
    REPORT_EVENT,
    REPORT_SECTION,
    REPORT_HOME_TEAM,
    REPORT_AWAY_TEAM,
    REPORT_ROUND,
    REPORT_BOARD,
    REPORT_HOME_PLAYER,
    REPORT_AWAY_PLAYER,
    REPORT_DATE,
    REPORT_HOME_PLAYER_COLOUR,
    REPORT_RESULT,
    REPORT_HOME_TEAM_SCORE,
    REPORT_AWAY_TEAM_SCORE,
    REPORT_DAY,
)

# Suitable for generating parsable " ".join(row) from csv file.
# ECF code and ECF membership number should be prefixes to the player name
# in REPORT_HOME_PLAYER, and suffixes in REPORT_AWAY_PLAYER, if they are
# reported to avoid confusion if only one player has these.
TABULAR_REPORT_DEFAULT_SOURCE_ORDER = (
    REPORT_SECTION,
    REPORT_DAY,
    REPORT_DATE,
    REPORT_ROUND,
    REPORT_HOME_TEAM,
    REPORT_HOME_TEAM_SCORE,
    REPORT_HOME_PLAYER,
    REPORT_RESULT,
    REPORT_AWAY_PLAYER,
    REPORT_AWAY_TEAM_SCORE,
    REPORT_AWAY_TEAM,
    REPORT_BOARD,
    REPORT_HOME_PLAYER_COLOUR,
    REPORT_EVENT,
)

# Name of file containing the results in ECF results submission file style.
# Each event is in a separate directory, allowing a predetermined file name
# to be used.  There may be two files, with different extensions, one text
# and the other containing output from the tkinter.Text.dump() method.
# The Player List, Result Details, and Finish, sections are present in the
# file but some fields may have null values while the data is being
# gathered.
# Three additional sections, Team List, Person List, and Final, are present
# to support data gathering.
SUBMISSION = "submission"
